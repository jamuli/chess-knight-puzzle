{"version":3,"sources":["components/About.js","components/header/GithubIconLink.js","components/header/HomeIconLink.js","components/header/AboutLink.js","components/header/Header.js","actions/index.js","constants/index.js","utils/index.js","components/pieces/Empty.js","assets/knight_b.svg","components/pieces/Knight.js","assets/queen_w.svg","components/pieces/Queen.js","components/Square.js","components/Board.js","components/IllegalMoves.js","components/Timer.js","components/Game.js","App.js","reportWebVitals.js","reducers/boardReducer.js","reducers/gameReducer.js","reducers/targetReducer.js","reducers/timerReducer.js","reducers/index.js","index.js"],"names":["About","GithubIconLink","className","target","rel","href","xmlns","class","height","viewBox","version","width","aria-hidden","fill-rule","d","HomeIconLink","to","AboutLink","Header","selectSquare","i","type","squareIndex","movePiece","drag","endGame","gameEnding","ItemTypes","KNIGHT_MOVES","QUEEN_SQUARES","STARTING_TARGET_BOARD","OFFICIAL_COLORS","getFormattedTime","time","desktopFormat","ms","Math","floor","slice","s","m","determineIfSquareIsWhite","Empty","Knight","location","gameStarted","useSelector","state","game","gameEnded","useDrag","collect","monitor","isDragging","dispatch","useDispatch","onSelectHandler","e","preventDefault","draggable","onSelect","onDragStart","dragStartHandler","onDrag","onDragHandler","style","cursor","src","knight_svg","alt","Queen","queen_svg","Square","isWhite","children","useDrop","accept","drop","item","console","log","isOver","canDrop","board","selectedSquare","pieceSelected","validKnightMoves","illegalSquare","nextTarget","validKnightSquare","indexOf","fill","highlight","COLORS","fillHelper","animation","animationHelper","handleOnDrop","moveToSquare","parseInt","id","updateGoalSquares","handledragStart","handleOnSelect","onDrop","backgroundColor","display","justifyContent","alignItems","Board","squareIsSelected","bitPieceToPiece","bitPiece","renderSquare","onClick","handleSquareClick","map","piece","IllegalMoves","illegalMoveCounter","icon","disabled","Icon","name","fitted","color","size","illegalIcons","push","getIllegalIcons","Timer","useState","setTime","timerOn","setTimerOn","useEffect","interval","clearInterval","setInterval","prevTime","useMediaQuery","query","padding","link","Game","App","DndProvider","backend","HTML5Backend","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","undefined","moves","boardReducer","JSON","parse","stringify","action","square","resetSelections","updateValidKnightMoves","currSquare","forEach","move","potentialMove","illegalMove","squareTo","validMove","squareFrom","resetIllegalSquare","setIllegalMove","gameType","playerWon","gameReset","gameReducer","INITIAL_TARGET_STATE","goalSquares","startingGoalSquares","currIndex","RANK_SHIFT_AMOUNT","targetReducer","length","shift","isOn","timerReducer","offset","rootReducer","combineReducers","timer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.add3c665.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            This is the about page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","export default function GithubIconLink() {\r\n    return (\r\n        <a \r\n            className='header-link'\r\n            target='_blank' \r\n            rel=\"noopener noreferrer\" \r\n            href={'https://github.com/jamuli/chess-knight-puzzle'}\r\n        >\r\n            <svg \r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                class=\"octicon-mark-github\" \r\n                height=\"32\" \r\n                viewBox=\"0 0 16 16\" \r\n                version=\"1.1\" \r\n                width=\"32\" \r\n                aria-hidden=\"true\"\r\n            >\r\n                <path \r\n                    class=\"github-svg\"\r\n                    fill-rule=\"evenodd\" \r\n                    d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\r\n                ></path>\r\n            </svg>\r\n        </a>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { Link } from 'react-router-dom'\r\n\r\nexport default function HomeIconLink() {\r\n    return (\r\n        <Link className='header-link' to='/'>\r\n        \r\n            <svg \r\n            xmlns=\"http://www.w3.org/2000/svg\" \r\n            width=\"32\" \r\n            height=\"32\" \r\n            viewBox=\"0 0 384 512\" \r\n            aria-hidden=\"true\"\r\n            >\r\n                <path d=\"M19 272.47l40.63 18.06a32 32 0 0 0 24.88.47l12.78-5.12a32 32 0 0 0 18.76-20.5l9.22-30.65a24 24 0 0 1 12.55-15.65L159.94 208v50.33a48 48 0 0 1-26.53 42.94l-57.22 28.65A80 80 0 0 0 32 401.48V416h319.86V224c0-106-85.92-192-191.92-192H12A12 12 0 0 0 0 44a16.9 16.9 0 0 0 1.79 7.58L16 80l-9 9a24 24 0 0 0-7 17v137.21a32 32 0 0 0 19 29.26zM52 128a20 20 0 1 1-20 20 20 20 0 0 1 20-20zm316 320H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" class=\"\"></path>\r\n            </svg>\r\n            \r\n            </Link>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction AboutLink() {\r\n    return (\r\n        <Link className='header-link' to='/about'>\r\n            About  \r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default AboutLink\r\n","import React from 'react'\r\n\r\nimport GithubIconLink from './GithubIconLink'\r\nimport HomeIconLink from './HomeIconLink'\r\nimport AboutLink from './AboutLink'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header'>\r\n            <div className='header-item github-link'>\r\n                <HomeIconLink />\r\n            </div>\r\n            \r\n            <div className='header-item'>\r\n                <AboutLink />\r\n            </div>\r\n            <div className='header-item github-link'>\r\n                <GithubIconLink />\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","export const selectSquare = (i) => {\r\n    return {\r\n        type: 'SELECT_SQUARE',\r\n        squareIndex: i\r\n    }\r\n}\r\n\r\nexport const unselectSquare = () => {\r\n    return {type: 'UNSELECT_SQUARE'}\r\n}\r\n\r\nexport const movePiece = (i, drag) => {\r\n    return {\r\n        type: 'MOVE_PIECE',\r\n        squareIndex: i\r\n    }\r\n}\r\n\r\nexport const resetIllegalSquare = () => {\r\n    return {type: 'RESET_ILLEGAL_SQUARE'}\r\n}\r\n\r\nexport const updateTarget = () => {\r\n    return {type: 'UPDATE_TARGET'}\r\n}\r\n\r\n// -------- GAME ACTIONS --------\r\nexport const startGame = () => {\r\n    return {type: 'START_GAME'}\r\n}\r\n\r\nexport const resetGame = () => {\r\n    return {type: 'RESET_GAME'}\r\n}\r\n\r\nexport const endGame = (gameEnding) => {\r\n    return {\r\n        type: 'END_GAME',\r\n        gameEnding: gameEnding\r\n    }\r\n}\r\n\r\n","export const ItemTypes = {\r\n    KNIGHT: 'knight'\r\n}\r\n\r\n/* ------------ CHESS  VALUES ------------ */\r\nexport const A_FILE = 1\r\nexport const RANK_SHIFT_AMOUNT = 10\r\nexport const EDGE_FILE_TO_EDGE_FILE_AMOUNT = 7\r\n/* ------------ PIECES ------------ */\r\n\r\nexport const KNIGHT = 2\r\nexport const QUEEN = 4\r\n\r\n/* ------------ SQUARES ------------ */\r\nexport const INVALID_SQUARE = -1\r\nexport const EMPTY_SQUARE = 0\r\nexport const QUEEN_SQUARE = 1\r\nexport const INITIAL_TARGET = 26\r\nexport const LARGEST_VALID_INDEX = 98\r\n\r\n/* ------------ SQUARE INDICIES ------------ */\r\nexport const LAST_TARGET = 91\r\n\r\n/* ------------ MOVES ------------ */\r\nexport const KNIGHT_MOVES = [-21, -19,-12, -8, 8, 12, 19, 21]\r\n// export const pieceMoves = {\r\n//     PAWN: [],\r\n//     KNIGHT: [-21, -19,-12, -8, 8, 12, 19, 21],\r\n//     BISHOP: [],\r\n//     ROOK: [],\r\n//     QUEEN: [],\r\n//     KING: [],\r\n\r\n// }\r\n\r\n/* ------------ BOARDS ------------ */\r\nexport const STARTING_BOARD = [\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    -1,  0,  0,  0,  0,  0,  0,  0,  2, -1, \r\n    -1,  0,  0,  0,  0,  0,  0,  0,  0, -1, \r\n    -1,  0,  0,  0,  0,  0,  0,  0,  0, -1, \r\n    -1,  0,  0,  0,  4,  0,  0,  0,  0, -1, \r\n    -1,  0,  0,  0,  0,  0,  0,  0,  0, -1, \r\n    -1,  0,  0,  0,  0,  0,  0,  0,  0, -1, \r\n    -1,  0,  0,  0,  0,  0,  0,  0,  0, -1, \r\n    -1,  0,  0,  0,  0,  0,  0,  0,  0, -1, \r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 \r\n]\r\nexport const QUEEN_SQUARES = [\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    -1,  1,  0,  0,  1,  0,  0,  1,  0, -1, \r\n    -1,  0,  1,  0,  1,  0,  1,  0,  0, -1, \r\n    -1,  0,  0,  1,  1,  1,  0,  0,  0, -1, \r\n    -1,  1,  1,  1,  1,  1,  1,  1,  1, -1, \r\n    -1,  0,  0,  1,  1,  1,  0,  0,  0, -1, \r\n    -1,  0,  1,  0,  1,  0,  1,  0,  0, -1, \r\n    -1,  1,  0,  0,  1,  0,  0,  1,  0, -1, \r\n    -1,  0,  0,  0,  1,  0,  0,  0,  1, -1, \r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 \r\n]\r\nexport const STARTING_TARGET_BOARD = [\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    -1,  1,  0,  0,  1,  0,  0,  1,  2, -1, \r\n    -1,  0,  1,  0,  1,  0,  1,  0,  0, -1, \r\n    -1,  0,  0,  1,  1,  1,  0,  0,  0, -1, \r\n    -1,  1,  1,  1,  1,  1,  1,  1,  1, -1, \r\n    -1,  0,  0,  1,  1,  1,  0,  0,  0, -1, \r\n    -1,  0,  1,  0,  1,  0,  1,  0,  0, -1, \r\n    -1,  1,  0,  0,  1,  0,  0,  1,  0, -1, \r\n    -1,  0,  0,  0,  1,  0,  0,  0,  1, -1, \r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 \r\n]\r\n\r\n\r\n/* ------------ STYLING ------------ */\r\n\r\nexport const OFFICIAL_COLORS = {\r\n    WHITE: '#EEEED2',\r\n    BLACK: '#769656',\r\n    W_HIGHLIGHT: '#F6F668',\r\n    B_HIGHLIGHT: '#BBCA2B',\r\n    W_ILLEGAL: '#F08B81',\r\n    B_ILLEGAL: '#B55F44'\r\n\r\n}","import { OFFICIAL_COLORS as COLORS } from './../constants'\r\n\r\n\r\nexport const getFormattedTime = (time, desktopFormat) => {\r\n    const ms = ('0' + Math.floor(time % 100)).slice(-2)\r\n    const s = ('0' + Math.floor((time / 100) % 60)).slice(-2)\r\n    const m = ('0' + Math.floor(time / 6000) % 50).slice(-2)\r\n    if (desktopFormat) {\r\n        return `${m} : ${s} : ${ms}`\r\n    } else {\r\n        return `${m} : ${s}`\r\n    }\r\n    \r\n}\r\n\r\nexport const determineIfSquareIsWhite = (i) => {\r\n    const x = (i % 10) - 1\r\n    const y = Math.floor((i-20) / 10)\r\n    return (x + y) % 2 === 0\r\n}\r\n\r\n\r\nexport const animationHelper = (i, isWhite, illegalSquare, nextTarget) => {\r\n    let animation = 'none'\r\n    if (i === illegalSquare && i === nextTarget) {\r\n        animation = 'none'\r\n        isWhite ?\r\n            animation = 'wrong-square-blinker-white 0.5s linear 2, next-square-blinker-white 2s linear infinite' :\r\n            animation = 'wrong-square-blinker-black 0.5s linear 2, next-square-blinker-black 2s linear infinite'  \r\n    } else if (i === illegalSquare) {\r\n        isWhite ?\r\n            animation = 'wrong-square-blinker-white 0.5s linear 2' :\r\n            animation = 'wrong-square-blinker-black 0.5s linear 2' \r\n    } else if (i === nextTarget) {\r\n        isWhite ?\r\n            animation = 'next-square-blinker-white 2s linear infinite' :\r\n            animation = 'next-square-blinker-black 2s linear infinite'\r\n    } \r\n    return animation\r\n}\r\n\r\nexport const fillHelper = (isWhite, highlight) =>{\r\n    let fill\r\n    if(highlight) {\r\n        fill = isWhite ? COLORS.W_HIGHLIGHT : COLORS.B_HIGHLIGHT \r\n    } else {\r\n        fill = isWhite ? COLORS.WHITE : COLORS.BLACK \r\n    }\r\n    return fill\r\n}\r\n","// Empty square\r\nimport React from 'react'\r\n\r\nexport default function Empty() {\r\n    return <div></div>\r\n}","export default __webpack_public_path__ + \"static/media/knight_b.d714eeb4.svg\";","// lonely knight to move around\r\nimport React from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectSquare } from '../../actions'\r\nimport knight_svg from './../../assets/knight_b.svg'\r\nimport { useDrag } from 'react-dnd'\r\nimport { ItemTypes } from '../../constants'\r\n\r\nexport default function Knight(i) {\r\n    const location = i.i\r\n\r\n    const gameStarted = useSelector(state => state.game.gameStarted)\r\n    const gameEnded = useSelector(state => state.game.gameEnded)\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: ItemTypes.KNIGHT,\r\n        collect: monitor => ({\r\n            isDragging: !!monitor.isDragging()\r\n        }),\r\n    });\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    function onDragHandler(e) {\r\n        e.preventDefault()\r\n    }\r\n\r\n    function dragStartHandler(e) {\r\n        if(!gameStarted && !gameEnded) {\r\n            e.preventDefault()\r\n        }\r\n        else if(!gameEnded) {\r\n            dispatch(selectSquare(location))\r\n            // dispatch(resetIllegalSquare())\r\n        }\r\n    }\r\n\r\n    function onSelectHandler(e) {\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className='chess-piece-container'\r\n            draggable=\"true\"\r\n            onSelect = {(e) => onSelectHandler()}\r\n            onDragStart = {(e) => dragStartHandler(e)}\r\n            onDrag ={(e) => onDragHandler(e)}\r\n            // ref = {drag}\r\n            \r\n            style={{\r\n                // opacity: isDragging ? 0.5 : 1,\r\n                width: '100%',\r\n                height: '100%',\r\n                cursor: 'move'\r\n            }}\r\n        >\r\n            <img \r\n                onSelect = {(e) => onSelectHandler()} \r\n                className = 'chess-piece' \r\n                src = { knight_svg } \r\n                alt = \"\" \r\n            />\r\n        </div>\r\n        \r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/queen_w.5b678bc3.svg\";","// lonely queen to only move when it can capture the knight\r\nimport React from 'react'\r\nimport queen_svg from './../../assets/queen_w.svg'\r\n\r\nexport default function Queen() {\r\n    return (\r\n        <div className='chess-piece-container'>\r\n            <img \r\n                className = 'chess-piece'\r\n                src = { queen_svg }\r\n                alt = \"\"\r\n            />\r\n        </div>\r\n    )\r\n}","// single square on board\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { movePiece, updateTarget, endGame} from './../actions'\r\nimport { animationHelper, fillHelper } from './../utils'\r\nimport { ItemTypes, KNIGHT, LAST_TARGET } from './../constants'\r\nimport { useDrop } from 'react-dnd'\r\n\r\n\r\nexport default function Square({ isWhite, i, children }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [collectedProps, drop] = useDrop({\r\n        accept: ItemTypes.KNIGHT,\r\n        drop: (item, monitor) => console.log(item),\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver(),\r\n            canDrop: !!monitor.canDrop()\r\n        })\r\n    })\r\n\r\n    const gameStarted = useSelector(state => state.game.gameStarted)\r\n    const gameEnded  = useSelector(state => state.game.gameEnded)\r\n    \r\n    const { \r\n        selectedSquare, pieceSelected, validKnightMoves, illegalSquare\r\n    } = useSelector(state => state.board)\r\n \r\n    const { nextTarget } = useSelector(state => state.target)\r\n\r\n    // this square is a valid move\r\n    const validKnightSquare = validKnightMoves.indexOf(i) !== -1 \r\n\r\n    // highlight if square selected or a valid move\r\n    const highlight = \r\n        selectedSquare === i || \r\n        (validKnightSquare && pieceSelected === KNIGHT)\r\n    const fill = fillHelper(isWhite, highlight)\r\n\r\n\r\n    // blink red if this square is illegal\r\n    const animation = animationHelper(i, isWhite, illegalSquare, nextTarget)\r\n    \r\n\r\n    function updateGoalSquares(moveToSquare) {\r\n        if (validKnightMoves.indexOf(moveToSquare) !== -1 &&\r\n            moveToSquare === nextTarget\r\n        ) {\r\n            dispatch(updateTarget())\r\n            if (moveToSquare === LAST_TARGET) dispatch(endGame())\r\n        }\r\n    }\r\n\r\n    function handleOnDrop(e) {\r\n        e.preventDefault()\r\n        const moveToSquare = parseInt(e.target.id)\r\n        if(gameStarted && !gameEnded) {\r\n            dispatch(movePiece(moveToSquare))\r\n            updateGoalSquares(moveToSquare)\r\n        }\r\n    }\r\n\r\n    function handledragStart(e) {\r\n        if(!gameStarted && !gameEnded) e.preventDefault()\r\n        console.log('drag started', e)\r\n    }\r\n\r\n    function handleOnSelect(e) {\r\n        e.preventDefault()\r\n\r\n    }\r\n    return(\r\n        <div \r\n            // ref={ drop }\r\n            className = {'square'}\r\n            id={i}\r\n            onDragStart = {(e) => handledragStart}\r\n            onSelect = {(e) => handleOnSelect(e)}\r\n            onDrop ={(e) => handleOnDrop(e)}\r\n            style = {{ \r\n                backgroundColor: fill,\r\n                width: '100%',\r\n                height: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                animation: animation\r\n        }}>\r\n            {children}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n// const colors = {\r\n//     roseyBrown : '#BF8D88',\r\n//     cornSilk : '#F9F4D8',\r\n//     turquoise: '#4FE3DA',\r\n//     celeste: '#B8F4F0',\r\n//     oldRose: '#B8807A',\r\n//     tuscany: '#C49792',\r\n//     orange_yellow_crayola: '#F6D579'\r\n// }\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    selectSquare, unselectSquare, movePiece, \r\n    resetIllegalSquare, updateTarget, endGame\r\n    } from '../actions'\r\n\r\nimport { determineIfSquareIsWhite } from './../utils'\r\n\r\nimport {\r\n    LAST_TARGET, INVALID_SQUARE, EMPTY_SQUARE,\r\n    KNIGHT, QUEEN\r\n    } from './../constants'\r\n\r\nimport Empty from './pieces/Empty'\r\nimport Knight from './pieces/Knight'\r\nimport Queen from './pieces/Queen'\r\nimport Square from './Square'\r\n\r\n\r\nexport default function Board() {\r\n    const dispatch = useDispatch();\r\n\r\n    const gameStarted = useSelector(state => state.game.gameStarted)\r\n    const gameEnded = useSelector(state => state.game.gameEnded)\r\n\r\n    const board = useSelector(state => state.board.board)\r\n    const pieceSelected = useSelector(state => state.board.pieceSelected)\r\n    const squareIsSelected = useSelector(state => state.board.squareIsSelected)\r\n    const selectedSquare = useSelector(state => state.board.selectedSquare)\r\n    const validKnightMoves = useSelector(state => state.board.validKnightMoves)\r\n    \r\n\r\n    const nextTarget = useSelector(state => state.target.nextTarget)\r\n    \r\n    const bitPieceToPiece = (bitPiece, i) => {\r\n        switch(bitPiece) {\r\n            case EMPTY_SQUARE:  return <Empty i={i} />\r\n            case KNIGHT:        return <Knight i={i} />\r\n            case QUEEN:         return <Queen i={i} />\r\n            default:            return <Empty i={i} />\r\n        }\r\n    }\r\n\r\n    function renderSquare(bitPiece, i) {\r\n        if (bitPiece === INVALID_SQUARE) {\r\n            return \r\n        }\r\n        \r\n        return (\r\n            <div \r\n                className='square'\r\n                onClick={(e) => handleSquareClick(i)} \r\n                key={i}\r\n            >\r\n                    <Square i={i} isWhite = {determineIfSquareIsWhite(i)} > \r\n                        <div id='chess-piece' className='chess-piece'>\r\n                            {bitPieceToPiece(bitPiece, i)}\r\n                        </div>\r\n                        \r\n                    </Square>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function handleSquareClick(i) {\r\n        if(!gameStarted) return\r\n        if (!squareIsSelected || pieceSelected === 0) {\r\n            // a square has not been selected or an empty square has so select this one\r\n            if(!gameEnded) {\r\n                dispatch(selectSquare(i))\r\n                dispatch(resetIllegalSquare())\r\n            }\r\n        } else {\r\n            if(selectedSquare === i) {\r\n                // this square is already selected. unselect it\r\n                dispatch(unselectSquare())\r\n            } else if (gameStarted && !gameEnded) {\r\n                handleMove(i)\r\n            }\r\n        }   \r\n    }\r\n\r\n    function handleMove(moveToSquare) {\r\n        // TODO: FIX! THIS IS BROKEN\r\n        // attempt to move selected piece here\r\n        dispatch(movePiece(moveToSquare))\r\n        if (validKnightMoves.indexOf(moveToSquare) !== -1 &&\r\n            moveToSquare === nextTarget\r\n        ) {\r\n            dispatch(updateTarget())\r\n            if (moveToSquare === LAST_TARGET) dispatch(endGame())\r\n        }\r\n        \r\n        // // update goalSquares if knight has reached one\r\n        // if (moveToSquare === nextTarget && \r\n        //     moveToSquare === LAST_TARGET\r\n        // ) {\r\n        //     dispatch(updateTarget())\r\n        // } \r\n        // // end game if needed\r\n        // if (moveToSquare === LAST_TARGET) dispatch(endGame())\r\n    }\r\n\r\n    return (\r\n        <div className='board-container'>\r\n            <div className='board'>\r\n                {board.map((piece, i) => (\r\n                    renderSquare(piece, i)\r\n                ))}\r\n            </div>    \r\n        </div>\r\n        \r\n    )\r\n}","import React from 'react'\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nexport default function IllegalMoves() {\r\n\r\n    const illegalMoveCounter = useSelector(state => state.board.illegalMoveCounter)\r\n\r\n    \r\n    function icon(disabled, i) {\r\n        const className = disabled ? 'illegal-move-icon-big-disabled':\r\n            'illegal-move-icon-big-enabled'\r\n        return (\r\n        <div className={className} key={i}>\r\n            <Icon name={'x'} disabled={disabled} fitted={true} color={'red'} size={'big'}/> \r\n        </div>\r\n        )\r\n\r\n    }\r\n    function getIllegalIcons() {\r\n        let illegalIcons = []\r\n        for(let i = 0; i < 3; i++) {\r\n            i < illegalMoveCounter ?\r\n                illegalIcons.push(icon(false, i)) : \r\n                illegalIcons.push(icon(true, i))\r\n        }\r\n        return illegalIcons;\r\n    }\r\n\r\n    return(\r\n        <div className={'illegal-move-icon-container'}>\r\n            { getIllegalIcons() }\r\n          </div>\r\n    )\r\n    \r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nimport { startGame, endGame, resetGame } from './../actions'\r\nimport { getFormattedTime } from './../utils'\r\n\r\n// import StartStopButtons from './StartStopButtons'\r\n\r\nexport default function Timer() {\r\n    const [time, setTime] = useState(0)\r\n    const [timerOn, setTimerOn] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const gameStarted = useSelector(state => state.game.gameStarted)\r\n    const gameEnded = useSelector(state => state.game.gameEnded)\r\n\r\n    useEffect(() => {\r\n        let interval = null\r\n        if (gameEnded && timerOn) {\r\n            clearInterval(interval)\r\n            setTimerOn(false)\r\n        }\r\n        if (timerOn) {\r\n            if (!gameStarted) dispatch(startGame())\r\n            interval = setInterval(() => {\r\n                setTime(prevTime => prevTime + 1)\r\n            }, 10)\r\n        } else {\r\n            clearInterval(interval)\r\n        }\r\n\r\n        return () => clearInterval(interval)\r\n\r\n    }, [timerOn, gameEnded, gameStarted, dispatch])\r\n\r\n    function handleStartGameClick() {\r\n        setTimerOn(true)\r\n        dispatch(startGame())\r\n    }\r\n    // function handleEndGameClick() {\r\n    //     if (timerOn) setTimerOn(false)\r\n    //     dispatch(endGame())\r\n    // }\r\n\r\n    function handleResetGameClick() {\r\n        setTimerOn(false)\r\n        setTime(0)\r\n        dispatch(resetGame())\r\n    }\r\n\r\n    const desktopFormat = useMediaQuery({\r\n          query: \"(min-width: 480px)\"\r\n        })\r\n    console.log(desktopFormat)\r\n\r\n    return (\r\n        <div className={'timer-container'}>\r\n            {gameStarted ? \r\n                <>\r\n                    <div style={{padding: '20px'}}> {getFormattedTime(time, desktopFormat)}</div>\r\n                    <Icon\r\n                        className='timer-button reset'\r\n                        name='sync alternate'\r\n                        size='small'\r\n                        link\r\n                        onClick={() => handleResetGameClick()}\r\n                    ></Icon>\r\n                     \r\n                </> : \r\n\r\n                <>\r\n                    <button \r\n                        className='timer-button-start-game'\r\n                        onClick={() => handleStartGameClick()}\r\n                    >Start Game</button>\r\n                </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","// board with 64 squares\r\n\r\nimport React, { useEffect } from 'react'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { endGame } from '../actions'\r\nimport Board from './Board'\r\nimport IllegalMoves from './IllegalMoves'\r\nimport Timer from './Timer'\r\n\r\nexport default function Game() {\r\n    const dispatch = useDispatch();\r\n\r\n    const gameStarted = useSelector(state => state.game.gameStarted)\r\n    const illegalMoveCounter = useSelector(state => state.board.illegalMoveCounter)\r\n\r\n    \r\n    useEffect(() => {\r\n        if (illegalMoveCounter === 3) dispatch(endGame())\r\n    })\r\n\r\n    return (\r\n        <div className={'game-container'}>\r\n            <Timer />\r\n            <Board />\r\n            <IllegalMoves />\r\n        </div>\r\n        \r\n    )\r\n\r\n}","import './App.css'\nimport React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\n// import { useMediaQuery } from 'react-responsive'\n\n// import { Link } from 'react-router-dom'\n// import { Icon } from 'semantic-ui-react'\n\nimport About from './components/About'\nimport Header from './components/header/Header'\nimport Game from './components/Game'\n\n\n// import GameSettings from './components/GameSettings'\n\nfunction App() {\n  // const isBigScreen = useMediaQuery({\n  //   query: \"(min-width: 700px)\"\n  // })\n\n  // const isMediumScreen = useMediaQuery({\n  //   query: \"(min-width: 400px)\"\n  // })\n\n  // const isSmallScreen = useMediaQuery({\n  //   query: \"(min-width: 200px)\"\n  // })\n\n  return (\n    <Router>\n      <DndProvider backend={HTML5Backend}>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/\" component={Game} />\n        </Switch>\n        \n\n      </div>\n    </DndProvider>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    KNIGHT, EMPTY_SQUARE, QUEEN_SQUARE,INVALID_SQUARE, \r\n    KNIGHT_MOVES, STARTING_BOARD, QUEEN_SQUARES\r\n\r\n} from './../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    board: [...STARTING_BOARD], \r\n    squareIsSelected: false, \r\n    selectedSquare: undefined, \r\n    pieceSelected: undefined, \r\n    validKnightMoves: [36, 47],\r\n    illegalSquare: undefined,\r\n    illegalMoveCounter: 0,\r\n    moves: []\r\n}\r\n\r\nconst boardReducer = (state = JSON.parse(JSON.stringify(INITIAL_STATE)), action) => {\r\n\r\n    function selectSquare(square) {\r\n        state.squareIsSelected = true\r\n        state.selectedSquare = square\r\n        state.pieceSelected = state.board[square]\r\n    }\r\n    function resetSelections() {\r\n        state.squareIsSelected = false\r\n        state.selectedSquare = undefined\r\n        state.pieceSelected = undefined\r\n    }\r\n\r\n    function updateValidKnightMoves(moveToSquare) {\r\n        state.validKnightMoves = []\r\n        const currSquare = moveToSquare\r\n        KNIGHT_MOVES.forEach((move) => {\r\n            const potentialMove = currSquare + move\r\n            if(state.board[potentialMove] !== INVALID_SQUARE) {\r\n                // console.log('add potential move', potentialMove)\r\n                state.validKnightMoves.push(potentialMove)\r\n            }\r\n        })\r\n    }\r\n\r\n    function illegalMove(squareTo) {\r\n        return state.validKnightMoves.indexOf(squareTo) !== -1 &&\r\n        QUEEN_SQUARES[squareTo] === QUEEN_SQUARE\r\n    }\r\n\r\n    function validMove(moveToSquare, piece) { \r\n        return state.validKnightMoves.indexOf(moveToSquare) !== -1 &&\r\n            QUEEN_SQUARES[moveToSquare] !== QUEEN_SQUARE && \r\n            state.pieceSelected === KNIGHT\r\n    }\r\n\r\n    function movePiece(squareFrom, squareTo) {\r\n        // console.log(STARTING_BOARD)\r\n        if (validMove(squareTo)) {\r\n            // valid move\r\n            // remove piece from square\r\n            state.board[squareFrom] = EMPTY_SQUARE\r\n            // add piece to move-to-square\r\n            state.board[squareTo] = state.pieceSelected\r\n            // only update if move is valid\r\n            updateValidKnightMoves(squareTo) \r\n            resetSelections()\r\n            resetIllegalSquare()\r\n        } else {  \r\n            // illegal move\r\n            if(illegalMove(squareTo)) state.illegalMoveCounter++ \r\n            resetSelections()\r\n            setIllegalMove(squareTo)\r\n        }\r\n    }\r\n\r\n    function setIllegalMove(square) {\r\n        state.illegalSquare = square\r\n    }\r\n    function resetIllegalSquare() {\r\n        state.illegalSquare = undefined\r\n    }\r\n\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n\r\n        case 'SELECT_SQUARE':\r\n            selectSquare(action.squareIndex)\r\n            return state\r\n\r\n        case 'UNSELECT_SQUARE':\r\n            resetSelections()\r\n            return state\r\n\r\n        case 'RESET_ILLEGAL_SQUARE':\r\n            resetIllegalSquare()\r\n            return state\r\n\r\n        case 'MOVE_PIECE':\r\n            movePiece(state.selectedSquare, action.squareIndex)\r\n            return state\r\n\r\n        case 'RESET_GAME':\r\n            state.board[28] = KNIGHT\r\n            // console.log('initial state should not change', INITIAL_STATE)\r\n            return JSON.parse(JSON.stringify(INITIAL_STATE))\r\n    }\r\n}\r\nexport default boardReducer;","const INITIAL_STATE = {\r\n    gameType: '',\r\n    gameStarted: false,\r\n    gameEnded: false,\r\n    playerWon: false,\r\n    gameReset: undefined\r\n}\r\n\r\nconst gameReducer = (state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n        case 'START_GAME':\r\n            return {\r\n                ...state,\r\n                gameStarted: true,\r\n                gameReset: false\r\n            }\r\n        case 'END_GAME':\r\n            return {\r\n                ...state,\r\n                gameEnded: true,\r\n                playerWon: action.gameEnding\r\n            }\r\n        case 'RESET_GAME':\r\n            return {\r\n                ...INITIAL_STATE,\r\n                gameReset: true\r\n            }\r\n        \r\n        default: \r\n            return state\r\n\r\n        // case 'GAME_WON':\r\n        //     state.gameEnded = true\r\n        //     state.playerWon = action.gameEnding\r\n        //     return state\r\n        // case 'GAME_LOST':\r\n        //     state.gameEnded = true\r\n        //     state.playerWon = action.gameEnding\r\n        //     return state\r\n    }\r\n}\r\n\r\nexport default gameReducer;","import {\r\n    INITIAL_TARGET, LARGEST_VALID_INDEX, RANK_SHIFT_AMOUNT,\r\n    EDGE_FILE_TO_EDGE_FILE_AMOUNT, A_FILE, EMPTY_SQUARE,\r\n    STARTING_TARGET_BOARD\r\n} from './../constants'\r\n\r\nconst INITIAL_TARGET_STATE = {\r\n    nextTarget: undefined,\r\n    goalSquares: startingGoalSquares(STARTING_TARGET_BOARD)\r\n}\r\n\r\n\r\n// change function to allow for queen to be in a different square at the start\r\n\r\nfunction startingGoalSquares(board) {\r\n    let goalSquares = []\r\n    // knight is already on 28 so 26 is initial target at start\r\n    let currIndex = INITIAL_TARGET\r\n    while(currIndex <= LARGEST_VALID_INDEX) { // 98 highest index to search\r\n        // add index if the square must be reached\r\n        if(board[currIndex] === EMPTY_SQUARE) goalSquares.push(currIndex)\r\n        // if on most left square of board, go to next row (+10) and to the right most column (+7)\r\n        currIndex % RANK_SHIFT_AMOUNT === A_FILE ? \r\n            currIndex += RANK_SHIFT_AMOUNT + EDGE_FILE_TO_EDGE_FILE_AMOUNT \r\n            : currIndex--\r\n    }\r\n    return goalSquares\r\n} \r\n\r\nconst targetReducer = (state = {...INITIAL_TARGET_STATE}, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n        case 'START_GAME':\r\n            return {\r\n                ...state,\r\n                nextTarget: INITIAL_TARGET\r\n            }\r\n        case 'UPDATE_TARGET':\r\n            if(state.goalSquares.length === 0) {\r\n                console.log('an error has been made with NEXT_TARGET in targetReducer.js')\r\n                return state\r\n            }\r\n            // maybe do so mething with squaresAchieved? maybe not though\r\n            state.goalSquares.shift()\r\n            state.nextTarget = state.goalSquares[0]\r\n            return state\r\n        case 'RESET_GAME':\r\n            return {\r\n                ...state,\r\n                nextTarget: undefined,\r\n                goalSquares: startingGoalSquares(STARTING_TARGET_BOARD)\r\n            }\r\n    }\r\n    \r\n}\r\nexport default targetReducer;","const INITIAL_STATE = {\r\n    isOn: false,\r\n    time: 0\r\n}\r\n\r\nconst timerReducer = (state = INITIAL_STATE, action) => {\r\n\r\n    switch (action.type) {\r\n       default:\r\n           return state\r\n        case 'START_TIMER':\r\n            return {\r\n              ...state,\r\n              isOn: true,\r\n              offset: action.offset,\r\n              interval: action.interval\r\n            }\r\n        case 'TICK':\r\n            return {\r\n                ...state,\r\n                time: state.time + (action.time - state.offset),\r\n                offset: action.time\r\n            };\r\n        case 'UNMOUNT_TIMER':\r\n            clearInterval(state.interval);\r\n            return {\r\n                ...INITIAL_STATE\r\n            };\r\n    }\r\n}\r\n\r\nexport default timerReducer","import { combineReducers } from 'redux'\r\nimport boardReducer from './boardReducer'\r\nimport gameReducer from './gameReducer'\r\nimport targetReducer from './targetReducer'\r\nimport timerReducer from './timerReducer'\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    board: boardReducer,\r\n    game: gameReducer,\r\n    target: targetReducer,\r\n    timer: timerReducer\r\n    \r\n\r\n})\r\n\r\nexport default rootReducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './reducers'\nimport 'semantic-ui-css/semantic.min.css'\n\nconst store = createStore(\n  rootReducer, \n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}